#!/usr/bin/env python
import re
import commands
import sys
import os
import getopt
import string
import time

sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/libcomake/");

import kws
import cokut
#import cokcomp
import cokgen
#import cokmk
import cokmake
import cokstand

class comake :
	_basepath = ".";
	_outfile = "";
	_target = ".";

	pass
	def help(self):
		fn = (os.path.dirname(os.path.realpath(__file__)) + "/libcomake/help.ch");
		fp = open(fn);
		print fp.read();
		fp.close();

		sys.exit();

	def run(self):
		vgenprj = cokgen.genprj();
		#vgenmk = cokmk.genmk();
		vgenmk = cokmake.cokmake();
		vgenstand = cokstand.genstand();

		try:
			optlist, caselist = getopt.getopt(sys.argv[1:], 
					"Chvp:b:o:s:", ['help', 'version', 'debug', 'project=', 'basepath=', 'standard=', 'checkout']);
			#check version
			for o, v in optlist:
				if o in ("-h", "--help", "-v", "--version"):
					self.help();

			os.chdir (self._basepath);

			#check pragma
			for o, v in optlist:
				if o in ("-b", "--basepath"):
					self._basepath = v;
					os.system("mkdir -p " + v)
					os.chdir (v);
				if o in ("-C", "--checkout"):
					kws.CHECKOUT = True;
				if o in ("--debug"):
					kws.DEBUG = 1;

			vgenprj.set_outfile(os.path.basename(os.getcwd())+".prj");
			vgenstand.set_outfile(os.path.basename(os.getcwd()));
			vgenmk.set_prjfile(os.path.basename(os.getcwd())+".prj");

			if caselist:
				vgenmk.set_prjfile(caselist[0]);

			for o, v in optlist:
				if o == "-o":
					boutfile = True;
					self._outfile = v;
					vgenprj.set_outfile(v);
					vgenmk.set_outfile(v);
					vgenstand.set_outfile(v);
					vgenstand.set_mkdir(True);

			#check command
			defrun = True;
			for o, v in optlist:
				if o in ("-p", "--project"): 
					defrun = False;
					if v not in kws.TPLFLAG:
						v = "app";
					vgenprj.run(v);
				if o in ("-s", "--standard"):
					defrun = False;
					if v not in kws.TPLFLAG:
						v = "app";
					vgenstand.run(v, vgenprj, vgenmk);
					

			if defrun :
				vgenmk.run();

		except getopt.GetoptError:
			self.help();

if __name__ == "__main__":
	com = comake();
	com.run();
