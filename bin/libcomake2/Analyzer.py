#!/usr/bin/env python
#coding:gbk

import os
import sys
import time
import getpass

class Analyzer(object):
    def __init__(self,env):
        self._env=env
        self._log_file=os.environ['HOME']+'/.comake2.dat'
        self._log_fp=None
        self._cur_date=time.strftime("%Y.%m.%d", time.localtime()) 
        self._cur_month=time.strftime("%Y.%m", time.localtime()) 
        self._usr_cmd='comake2'
        if(len(sys.argv)>1):
            self._usr_cmd='%s %s'%(self._usr_cmd,' '.join(sys.argv[1:]))
        self._usr_id=getpass.getuser()
        self._cvspath=env.CVSPath()
        self._header_line='###Auto generated by comake2, please do not touch the file.\n'
        self._mail_to='scmtools-notice@baidu.com'

    def _analyze_log(self,log_lines):
        commands={}
        modules={}
        for line in log_lines[1:]:
            line=line.strip()
            item=line.split('@')
            if(not item[1] in commands):
                commands[item[1]]=1
            else:
                commands[item[1]]+=1
            if(not item[2] in modules):
                modules[item[2]]=1
            else:
                modules[item[2]]+=1
        contents=[]
        contents.append('uses: %d\n\n'%(len(log_lines)-1))
        for key, value in sorted(commands.iteritems(), key=lambda d:d[0]):
            contents.append('%s: %s\n'%(key,value))
        contents.append('\n')
        for key, value in sorted(modules.iteritems(), key=lambda d:d[0]):
            contents.append('%s: %s\n'%(key,value))
        contents.append('\n')
        contents.extend(log_lines)
        contents_s=''.join(contents)
        line=log_lines[-1].split('@')
        last_month=line[0][:len('1999.01')]
        subject='[data][comake2]%s monthly report from %s'%(last_month,self._usr_id)
        os.system('echo -e "%s"|mail -s "%s" %s'%(contents_s,subject,self._mail_to))
        
    def _clear_and_open_log(self):
        if(self._log_fp):
            self._log_fp.close()
            os.remove(self._log_file)
            self._log_fp=file(self._log_file,'a+')
            self._log_fp.write(self._header_line)

    def analyze_log(self):
        self._log_fp=file(self._log_file,'a+')
        log_lines=self._log_fp.readlines()
        if(not log_lines):
            subject='[data][comake2]newbie say hi from %s'%(self._usr_id)
            contents_s='%s@%s@%s'%(self._cur_date,self._usr_cmd,self._cvspath)
            os.system('echo %s|mail -s "%s" %s'%(contents_s,subject,self._mail_to)) 
            self._log_fp.write(self._header_line)
        else:
            if(log_lines[0]==self._header_line):
                line=log_lines[-1].split('@')
                if(not line[0].startswith(self._cur_month)):
                    try:
                        self._analyze_log(log_lines)
                    except:
                        subject='[data][comake2]fail to generate monthly report from %s'%self._usr_id
                        os.system('cat %s|mail -s "%s" %s'%(self._log_file,subject,self._mail_to))
                    self._clear_and_open_log()
            else:
                self._clear_and_open_log()

        msg='%s@%s@%s\n'%(self._cur_date,self._usr_cmd,self._cvspath)
        self._log_fp.write(msg)
        self._log_fp.close()

