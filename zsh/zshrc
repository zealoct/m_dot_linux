# color code completion!!!!  Wohoo!
zstyle ':completion:*' list-colors "=(#b) #([0-9]#)*=36=31"
# Have the newer files last so I see them first
zstyle ':completion:*' file-sort modification reverse
# approximate completion
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric
# menu completion
zstyle ':completion:*' menu select=1

autoload -U compinit promptinit colors
compinit
promptinit
#zsh-mime-setup
colors

export BREAK_CHARS="\"#'(),;\|!?[]{}"
export EDITOR=vim

alias paci="sudo pacman -Sy"
alias pacs="pacman -Ss"
alias apti="sudo apt-get install"
alias apts="apt-cache search"

alias -g ..='..'
alias -g ...='../../'
alias -g G='| egrep --color=auto'
alias -g C='| wc -l'

alias l='ls --color=auto'
alias ls='ls --color=auto'
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias vi="vim"
alias svi='sudo vi'
alias scat='sudo cat'
alias sfind='sudo find'
alias grep='grep --color=auto'
alias du="du -mh --max-depth=1"
alias egrep='egrep --color=auto'
alias rm='rm -i'
alias man='LANG=C man'
alias sbcl="rlwrap -b \$BREAK_CHARS sbcl"
# git
alias gstt="git status -uno"
alias gsttn="git status -unormal"
alias gstta="git status -uall"
alias glog='git log --pretty=format:"%C(yellow)%H %C(blue)%an%C(red) %s %C(reset)" --stat'
alias glogo='git log --pretty=oneline'
alias glogs='git log --pretty=short'
alias gdiff='git diff'
# tmux
alias tmux="tmux -2" # make tmux support 256-color
alias ta='tmux attach -d -t'
alias tls='tmux ls'

# Disable ctrl+s
stty stop ''

case $TERM in
    screen*)
        function sctitle() { print -Pn "\ek$1\e\\"}
        function precmd() { sctitle "%20<..<%~%<<" }
        function preexec() { sctitle "%20>..>$1%<<" }
        export PROMPT="%{$bg[cyan]$fg_bold[blue]%}%D{%H:%M}%{$reset_color%}%{$bg[white]$fg[black]%} %~ %{$reset_color%}
%{$fg[blue]%}%#%{$reset_color%} "
    ;;
    *)
        export PS1="%{${fg[cyan]}%}[%D{%H:%M} %n@%m:%~]%{$reset_color%}
%{$fg[cyan]%}%#%{$reset_color%} "
    ;;
esac

bindkey -e # Emacs key bindings

# Function key bindings for xterm
bindkey '\e[1~' beginning-of-line
bindkey '\e[2~' quoted-insert
bindkey '\e[3~' delete-char
bindkey '\e[4~' end-of-line
bindkey '\e[5~' beginning-of-history
bindkey '\e[6~' end-of-history

## proxy setup
# http_proxy=http://10.131.251.46:8000/
# export http_proxy
# https_proxy=https://10.131.251.46:8000/
# export https_proxy

###############Please don't modify this section, or errors will occur!###############
#BTEST_FLAG_START
export BTEST_WORK_ROOT=/home/users/hanjinchen/work/svn_root//
export BTEST_HOME=/home/users/hanjinchen/btest
export GTEST_HOME=/home/users/hanjinchen/work/svn_root///com/btest/gtest/output
export LD_LIBRARY_PATH=$GTEST_HOME/lib:$LD_LIBRARY_PATH
export PATH=$BTEST_HOME/bin:$PATH
#BTEST_FLAG_END
###############Please don't modify this section, or errors will occur!###############
### BEGIN-ERRHUNTER-PATH please don't manualy change this format!! Or it will cause failure!
export ERRHUNTER_HOME=/home/users/hanjinchen/btest/errHunter
export PATH=$ERRHUNTER_HOME:$PATH
export LD_LIBRARY_PATH=$ERRHUNTER_HOME/lib/:$LD_LIBRARY_PATH
### END-ERRHUNTER-PATH #################
export ERRHUNTER_UPDATE_DATE=05/13/15

#CODE STYLE
export PYTHONIOENCODING=GBK

## CCOVER
export COVFILE=$PWD/test.cov

## Set this in ocean
export MAIL=
